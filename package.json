{
	"name": "app-template",
	"version": "0.0.1",
	"description": "App Template",
	"author": {
		"name": "App Template",
		"url": "https://github.com/AppTemplate/",
		"email": "app-template@mail.com"
	},
	"homepage": "https://github.com/AppTemplate/app-template/",
	"bugs": {
		"url": "https://github.com/AppTemplate/app-template/issues"
	},
	"repository": {
		"type": "git",
		"url": "git+ssh://git@github.com:AppTemplate/app-template.git"
	},
	"license": "Commercial",
	"files": [
		"dist/sapper/export/**"
	],
	"engines": {
		"node": ">= 8.6.0"
	},
	"scripts": {
		"precommit": "npm run build-test:ci",
		"prepublishOnly": "echo DONT PUBLISH IT !!!&&exit 1",
		"ci": "npm run build-test:ci && ncat \"tmp/*/coverage/all/lcov/**/lcov.info\" --banner \"\" | coveralls",
		"lint": "run-script \"require('./env/scripts/common').lint().stopOnError()\"",
		"lint:fix": "run-script \"require('./env/scripts/common').lint({fix: true}).stopOnError()\"",
		"-------- build --------": "",
		"build:icons": "icon-gen --ico name=appicon --icns name=appicon --favicon name=favicon sizes=16,64,512 --input src/assets/icons/vector/appicon.svg --output src/assets/icons/ico",
		"build:polyfill": "run-script \"require('./env/scripts/common').buildPolyfill().stopOnError()\"",
		"build:libs": "run-script \"require('./env/scripts/common').buildLibs().stopOnError()\"",
		"build:electron:dev": "run-script \"require('./env/scripts/specific/builds').buildElectron('dev').stopOnError()\"",
		"build:dev": "run-script \"require('./env/scripts').buildAll(['dev']).stopOnError()\"",
		"-------- test --------": "",
		"test:dev": "run-script \"require('./env/scripts').testAll(['dev'], { build: false }).stopOnError()\"",
		"test:all": "run-script \"require('./env/scripts').testAll(['demo', 'dev', 'stage', 'prod'], { build: false }).stopOnError()\"",
		"test:ci": "run-script \"require('./env/scripts').testCiAll(['dev'], { build: false }).stopOnError()\"",
		"-------- build-test --------": "",
		"build-test:dev": "run-script \"require('./env/scripts').testAll(['dev']).stopOnError()\"",
		"build-test:all": "run-script \"require('./env/scripts').testAll(['demo', 'dev', 'stage', 'prod']).stopOnError()\"",
		"build-test:ci": "run-script \"require('./env/scripts').testCiAll(['dev']).stopOnError()\"",
		"-------- coverage --------": "",
		"coverage:check:dev": "run-script \"require('./env/scripts/specific/tests').coverageCheck('dev').stopOnError()\"",
		"coverage:mocha:dev": "run-script \"require('./env/scripts/specific/tests').coverageMocha('dev').stopOnError()\"",
		"coverage:merge:dev": "run-script \"require('./env/scripts/specific/tests').coverageMerge('dev').stopOnError()\"",
		"-------- pack --------": "",
		"pack:dev": "run-script \"require('./env/scripts').packAll(['electron'], ['dev'], { test: false, build: false }).stopOnError()\"",
		"pack:demo": "run-script \"require('./env/scripts').packAll(['electron'], ['demo'], { test: false, build: false }).stopOnError()\"",
		"pack:stage": "run-script \"require('./env/scripts').packAll(['electron'], ['stage'], { test: false, build: false }).stopOnError()\"",
		"pack:preprod": "run-script \"require('./env/scripts').packAll(['electron'], ['preprod'], { test: false, build: false }).stopOnError()\"",
		"pack:prod": "run-script \"require('./env/scripts').packAll(['electron'], ['prod'], { test: false, build: false }).stopOnError()\"",
		"pack:chrome:dev": "run-script \"require('./env/scripts').packAll(['chrome'], ['dev'], { test: false, build: false }).stopOnError()\"",
		"pack:chrome:prod": "run-script \"require('./env/scripts').packAll(['chrome'], ['prod'], { test: false, build: false }).stopOnError()\"",
		"pack:all": "run-script \"require('./env/scripts').packAll(['electron'], ['stage', 'dev'], { test: false, build: false }).stopOnError()\"",
		"-------- build-pack --------": "",
		"build-pack:all": "run-script \"require('./env/scripts').packAll(['electron', 'chrome'], ['stage', 'dev', 'demo'], { test: false }).stopOnError()\"",
		"build-pack:prod": "run-script \"require('./env/scripts').packAll(['electron', 'chrome'], ['prod'], { test: false }).stopOnError()\"",
		"build-pack:preprod": "run-script \"require('./env/scripts').packAll(['electron'], ['preprod'], { test: false }).stopOnError()\"",
		"build-pack:stage": "run-script \"require('./env/scripts').packAll(['electron', 'chrome'], ['stage'], { test: false }).stopOnError()\"",
		"build-pack:dev": "run-script \"require('./env/scripts').packAll(['electron'], ['dev'], { test: false }).stopOnError()\"",
		"build-pack:demo": "run-script \"require('./env/scripts').packAll(['electron'], ['demo'], { test: false }).stopOnError()\"",
		"build-pack:chrome:dev": "run-script \"require('./env/scripts').packAll(['chrome'], ['dev'], { test: false }).stopOnError()\"",
		"-------- test-pack --------": "",
		"test-pack:dev": "run-script \"require('./env/scripts').packAll(['electron'], ['dev'], { build: false }).stopOnError()\"",
		"test-pack:all": "run-script \"require('./env/scripts').packAll(['electron'], ['demo', 'dev', 'stage', 'prod'], { build: false }).stopOnError()\"",
		"-------- build-test-pack --------": "",
		"build-test-pack:dev": "run-script \"require('./env/scripts').packAll(['electron'], ['dev']).stopOnError()\"",
		"build-test-pack:all": "run-script \"require('./env/scripts').packAll(['electron'], ['demo', 'dev', 'stage', 'prod']).stopOnError()\"",
		"-------- deploy --------": "",
		"deploy:dev": "run-script \"require('./env/scripts').deployAll(['dev'], { test: false, build: false }).stopOnError()\"",
		"build-deploy:dev": "run-script \"require('./env/scripts').deployAll(['dev'], { test: false }).stopOnError()\"",
		"build-test-deploy:dev": "run-script \"require('./env/scripts').deployAll(['dev']).stopOnError()\"",
		"-------- sapper --------": "",
		"sapper:dev": "node ./env/sapper/dev.js",
		"sapper:dev:components": "node ./env/sapper/dev-components.js",
		"-------- electron --------": "",
		"electron:dev": "set APP_CONFIG=debug&& electron ./src/main/node/electron/run/dev/run.js",
		"electron:dev-vm": "set APP_CONFIG=debug&& electron ./src/main/node/electron/run/dev-vm/run.js",
		"electron:export": "set APP_CONFIG=dev&& electron ./src/main/node/electron/run/export/run.js"
	},
	"devDependencies": {
		"@babel/cli": "^7.12.8",
		"@babel/core": "^7.12.9",
		"@babel/plugin-proposal-class-properties": "^7.12.1",
		"@babel/plugin-proposal-export-default-from": "^7.12.1",
		"@babel/plugin-proposal-export-namespace-from": "^7.12.1",
		"@babel/plugin-proposal-optional-chaining": "^7.12.7",
		"@babel/plugin-proposal-throw-expressions": "^7.12.1",
		"@babel/plugin-syntax-dynamic-import": "^7.2.0",
		"@babel/plugin-transform-async-to-generator": "^7.12.1",
		"@babel/plugin-transform-parameters": "^7.12.1",
		"@babel/plugin-transform-runtime": "^7.12.1",
		"@babel/plugin-transform-typescript": "^7.12.1",
		"@babel/preset-env": "^7.12.7",
		"@babel/register": "^7.12.1",
		"@babel/runtime-corejs3": "^7.12.5",
		"@flemist/browser-debug": "^0.0.1",
		"@flemist/css-to-xpath": "^0.0.5",
		"@flemist/require-css": "^0.0.2",
		"@flemist/run-script": "^0.2.5",
		"@metahub/karma-rollup-preprocessor": "^6.0.0",
		"@rollup/plugin-alias": "^3.1.1",
		"@rollup/plugin-babel": "^5.2.2",
		"@rollup/plugin-commonjs": "^15.0.0",
		"@rollup/plugin-json": "^4.0.3",
		"@rollup/plugin-node-resolve": "^9.0.0",
		"@theintern/leadfoot": "^2.2.12",
		"@types/chai": "^4.2.14",
		"@types/chrome-apps": "0.0.12",
		"@types/fs-extra": "^9.0.4",
		"@types/mocha": "^8.0.4",
		"@types/url-join": "^4.0.0",
		"@typescript-eslint/eslint-plugin": "^4.9.0",
		"@typescript-eslint/parser": "^4.9.0",
		"abortcontroller-polyfill": "^1.5.0",
		"autoprefixer": "^9.8.6",
		"browserslist": "^4.15.0",
		"caller": "^1.0.1",
		"caniuse-lite": "^1.0.30001164",
		"chai": "^4.2.0",
		"chai-as-promised": "^7.1.1",
		"chokidar": "^3.4.3",
		"color": "^3.1.3",
		"core-js": "^3.8.0",
		"core-js-pure": "^3.8.0",
		"cpy-cli": "^3.1.1",
		"cssnano": "^4.1.10",
		"depcheck": "^1.3.1",
		"electron": "^10.1.1",
		"electron-builder": "^22.8.0",
		"electron-notarize": "^1.0.0",
		"eslint": "^7.14.0",
		"eslint-config-pro": "^2.1.1",
		"eslint-plugin-html": "^6.1.1",
		"eslint-plugin-markdown": "^1.0.2",
		"eslint-plugin-node": "^11.1.0",
		"eslint-plugin-sonarjs": "^0.5.0",
		"eslint-plugin-svelte3": "^2.7.3",
		"fs-extra": "^9.0.1",
		"globby": "^11.0.1",
		"icon-gen": "^2.0.0",
		"intern": "^4.8.7",
		"ip": "^1.1.5",
		"json5": "^2.1.0",
		"karma": "^5.2.1",
		"karma-browserstack-launcher": "^1.5.1",
		"karma-chrome-launcher": "^3.1.0",
		"karma-coverage": "^2.0.3",
		"karma-detect-browsers": "^2.3.3",
		"karma-edge-launcher": "^0.4.2",
		"karma-electron": "^6.3.1",
		"karma-firefox-launcher": "^1.2.0",
		"karma-ie-launcher": "^1.0.0",
		"karma-mocha": "^2.0.1",
		"karma-opera-launcher": "^1.0.0",
		"karma-phantomjs-launcher": "^1.0.4",
		"karma-rollup-preprocessor": "^7.0.2",
		"karma-safari-launcher": "^1.0.0",
		"karma-safaritechpreview-launcher": "^2.0.2",
		"kleur": "^4.1.3",
		"lodash": "^4.17.20",
		"mocha": "^8.2.1",
		"ncat": "^4.0.2",
		"nyc": "^15.1.0",
		"perfectionist": "^2.4.0",
		"postcss": "^7.0.35",
		"postcss-calc": "^7.0.4",
		"postcss-global-nested": "^1.2.0",
		"postcss-js-syntax": "^1.0.7",
		"postcss-nested": "4.2.1",
		"postcss-syntax": "^0.36.2",
		"postcss-url": "^9.0.0",
		"ps-tree": "^1.2.0",
		"rdtsc": "^2.0.0",
		"regenerator-runtime": "^0.13.7",
		"require-from-memory": "^1.0.2",
		"resolve-from": "^5.0.0",
		"rollup": "^2.34.0",
		"rollup-plugin-istanbul": "^2.0.1",
		"rollup-plugin-node-builtins": "^2.1.2",
		"rollup-plugin-node-globals": "^1.4.0",
		"rollup-plugin-node-polyfills": "^0.2.1",
		"rollup-plugin-postcss": "^3.1.8",
		"rollup-plugin-replace": "^2.2.0",
		"rollup-plugin-svelte": "^6.0.0",
		"rollup-plugin-terser": "^7.0.2",
		"rollup-pluginutils": "^2.8.2",
		"sapper": "^0.28.4",
		"shx": "^0.3.3",
		"svelte": "^3.30.1",
		"svelte-preprocess": "^3.9.12",
		"svelte-themes-preprocess": "^1.0.5",
		"tailwindcss": "2.0.1-compat",
		"typescript": "^4.1.2",
		"vis-network": "^8.3.1",
		"zip-dir": "^1.0.2"
	},
	"dependencies": {
		"@flemist/web-logger": "^0.1.5",
		"compression": "^1.7.4",
		"express": "^4.17.1",
		"html-escaper": "^2.0.2",
		"iterare": "^1.2.1",
		"mime": "^2.4.4",
		"needle": "^2.5.2",
		"path-browserify": "^1.0.1",
		"sirv": "^1.0.6",
		"spark-md5": "^3.0.0",
		"ua-parser-js": "^0.7.21",
		"url-join": "^4.0.1",
		"webrain": "^1.4.6-a"
	}
}
